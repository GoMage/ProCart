<?php eval(base64_decode("LyoqICogR29NYWdlIFByb2NhcnQgRXh0ZW5zaW9uICogKiBAY2F0ZWdvcnkgRXh0ZW5zaW9uICogQGNvcHlyaWdodCBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNCBHb01hZ2UgKGh0dHA6Ly93d3cuZ29tYWdlLmNvbSkgKiBAYXV0aG9yIEdvTWFnZSAqIEBsaWNlbnNlIGh0dHA6Ly93d3cuZ29tYWdlLmNvbS9saWNlbnNlLWFncmVlbWVudC8gU2luZ2xlIGRvbWFpbiBsaWNlbnNlICogQHRlcm1zIG9mIHVzZSBodHRwOi8vd3d3LmdvbWFnZS5jb20vdGVybXMtb2YtdXNlICogQHZlcnNpb24gUmVsZWFzZTogMi4xICogQHNpbmNlIENsYXNzIGF2YWlsYWJsZSBzaW5jZSBSZWxlYXNlIDEuMCAqLyBjbGFzcyBHb01hZ2VfUHJvY2FydF9IZWxwZXJfRGF0YSBleHRlbmRzIE1hZ2VfQ29yZV9IZWxwZXJfQWJzdHJhY3QgeyBwdWJsaWMgZnVuY3Rpb24gZ2V0Q29uZmlnRGF0YSgkbm9kZSkgeyByZXR1cm4gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9wcm9jYXJ0LycgLiAkbm9kZSk7IH0gcHVibGljIGZ1bmN0aW9uIGdldEFsbFN0b3JlRG9tYWlucygpIHsgJGRvbWFpbnMgPSBhcnJheSgpOyBmb3JlYWNoIChNYWdlOjphcHAoKS0+Z2V0V2Vic2l0ZXMoKSBhcyAkd2Vic2l0ZSkgeyAkdXJsID0gJHdlYnNpdGUtPmdldENvbmZpZygnd2ViL3Vuc2VjdXJlL2Jhc2VfdXJsJyk7IGlmICgkZG9tYWluID0gdHJpbShwcmVnX3JlcGxhY2UoJy9eLio/XFwvXFwvKC4qKT9cXC8vJywgJyQxJywgJHVybCkpKSB7ICRkb21haW5zW10gPSAkZG9tYWluOyB9ICR1cmwgPSAkd2Vic2l0ZS0+Z2V0Q29uZmlnKCd3ZWIvc2VjdXJlL2Jhc2VfdXJsJyk7IGlmICgkZG9tYWluID0gdHJpbShwcmVnX3JlcGxhY2UoJy9eLio/XFwvXFwvKC4qKT9cXC8vJywgJyQxJywgJHVybCkpKSB7ICRkb21haW5zW10gPSAkZG9tYWluOyB9IH0gcmV0dXJuIGFycmF5X3VuaXF1ZSgkZG9tYWlucyk7IH0gcHVibGljIGZ1bmN0aW9uIGdldEF2YWlsYWJlbFdlYnNpdGVzKCkgeyByZXR1cm4gJHRoaXMtPl93KCk7IH0gcHVibGljIGZ1bmN0aW9uIGdldEF2YWlsYXZlbFdlYnNpdGVzKCkgeyByZXR1cm4gJHRoaXMtPl93KCk7IH0gcHJvdGVjdGVkIGZ1bmN0aW9uIF93KCkgeyBpZiAoIU1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9wcm9jYXJ0L2luc3RhbGxlZCcpIHx8IChpbnR2YWwoTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL3Byb2NhcnQvY291bnQnKSkgPiAxMCkgKSB7IHJldHVybiBhcnJheSgpOyB9ICR0aW1lX3RvX3VwZGF0ZSA9IDYwICogNjAgKiAyNCAqIDE1OyAkciA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9wcm9jYXJ0L2FyJyk7ICR0ID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL3Byb2NhcnQvdGltZScpOyAkcyA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9wcm9jYXJ0L3dlYnNpdGVzJyk7ICRsYXN0X2NoZWNrID0gc3RyX3JlcGxhY2UoJHIsICcnLCBNYWdlOjpoZWxwZXIoJ2NvcmUnKS0+ZGVjcnlwdCgkdCkpOyAkYWxsc2l0ZXMgPSBleHBsb2RlKCcsJywgc3RyX3JlcGxhY2UoJHIsICcnLCBNYWdlOjpoZWxwZXIoJ2NvcmUnKS0+ZGVjcnlwdCgkcykpKTsgJGFsbHNpdGVzID0gYXJyYXlfZGlmZigkYWxsc2l0ZXMsIGFycmF5KCIiKSk7IGlmICgoJGxhc3RfY2hlY2sgKyAkdGltZV90b191cGRhdGUpIDwgdGltZSgpKSB7ICR0aGlzLT5hKE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9wcm9jYXJ0L2tleScpLCBpbnR2YWwoTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL3Byb2NhcnQvY291bnQnKSksIGltcGxvZGUoJywnLCAkYWxsc2l0ZXMpICk7IH0gcmV0dXJuICRhbGxzaXRlczsgfSBwdWJsaWMgZnVuY3Rpb24gYSgkaywgJGMgPSAwLCAkcyA9ICcnKSB7ICRjaCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCBzcHJpbnRmKCdodHRwczovL3d3dy5nb21hZ2UuY29tL2luZGV4LnBocC9nb21hZ2VfZG93bmxvYWRhYmxlL2tleS9jaGVjaycpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVEZJRUxEUywgJ2tleT0nIC4gdXJsZW5jb2RlKCRrKSAuICcmc2t1PXByb2NhcnQmZG9tYWlucz0nIC4gdXJsZW5jb2RlKGltcGxvZGUoJywnLCAkdGhpcy0+Z2V0QWxsU3RvcmVEb21haW5zKCkpKSAuICcmdmVyPScgLiB1cmxlbmNvZGUoJzIuMScpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1RJTUVPVVQsIDMwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCAwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllIT1NULCAwKTsgJGNvbnRlbnQgPSBjdXJsX2V4ZWMoJGNoKTsgJHIgPSBaZW5kX0pzb246OmRlY29kZSgkY29udGVudCk7ICRlID0gTWFnZTo6aGVscGVyKCdjb3JlJyk7IGlmIChlbXB0eSgkcikpIHsgJHZhbHVlMSA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9wcm9jYXJ0L2FyJyk7ICRncm91cHMgPSBhcnJheSggJ3Byb2NhcnQnID0+IGFycmF5KCAnZmllbGRzJyA9PiBhcnJheSggJ2FyJyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAkdmFsdWUxICksICd3ZWJzaXRlcycgPT4gYXJyYXkoICd2YWx1ZScgPT4gKHN0cmluZylNYWdlOjpnZXRTdG9yZUNvbmZpZygnZ29tYWdlX2FjdGl2YXRpb24vcHJvY2FydC93ZWJzaXRlcycpICksICd0aW1lJyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAoc3RyaW5nKSRlLT5lbmNyeXB0KCR2YWx1ZTEgLiAodGltZSgpIC0gKDYwICogNjAgKiAyNCAqIDE1IC0gMTgwMCkpIC4gJHZhbHVlMSkgKSwgJ2NvdW50JyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAkYyArIDEpICkgKSApOyBNYWdlOjpnZXRNb2RlbCgnYWRtaW5odG1sL2NvbmZpZ19kYXRhJykgLT5zZXRTZWN0aW9uKCdnb21hZ2VfYWN0aXZhdGlvbicpIC0+c2V0R3JvdXBzKCRncm91cHMpIC0+c2F2ZSgpOyBNYWdlOjpnZXRDb25maWcoKS0+cmVpbml0KCk7IE1hZ2U6OmFwcCgpLT5yZWluaXRTdG9yZXMoKTsgcmV0dXJuOyB9ICR2YWx1ZTEgPSAnJzsgJHZhbHVlMiA9ICcnOyBpZiAoaXNzZXQoJHJbJ2QnXSkgJiYgaXNzZXQoJHJbJ2MnXSkpIHsgJHZhbHVlMSA9ICRlLT5lbmNyeXB0KGJhc2U2NF9lbmNvZGUoWmVuZF9Kc29uOjplbmNvZGUoJHIpKSk7IGlmICghJHMpIHsgJHMgPSBNYWdlOjpnZXRTdG9yZUNvbmZpZygnZ29tYWdlX2FjdGl2YXRpb24vcHJvY2FydC93ZWJzaXRlcycpOyB9ICRzID0gYXJyYXlfc2xpY2UoZXhwbG9kZSgnLCcsICRzKSwgMCwgJHJbJ2MnXSk7ICR2YWx1ZTIgPSAkZS0+ZW5jcnlwdCgkdmFsdWUxIC4gaW1wbG9kZSgnLCcsICRzKSAuICR2YWx1ZTEpOyB9ICRncm91cHMgPSBhcnJheSggJ3Byb2NhcnQnID0+IGFycmF5KCAnZmllbGRzJyA9PiBhcnJheSggJ2FyJyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAkdmFsdWUxICksICd3ZWJzaXRlcycgPT4gYXJyYXkoICd2YWx1ZScgPT4gKHN0cmluZykkdmFsdWUyICksICd0aW1lJyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAoc3RyaW5nKSRlLT5lbmNyeXB0KCR2YWx1ZTEgLiB0aW1lKCkgLiAkdmFsdWUxKSApLCAnaW5zdGFsbGVkJyA9PiBhcnJheSggJ3ZhbHVlJyA9PiAxICksICdjb3VudCcgPT4gYXJyYXkoICd2YWx1ZScgPT4gMCkgKSApICk7IE1hZ2U6OmdldE1vZGVsKCdhZG1pbmh0bWwvY29uZmlnX2RhdGEnKSAtPnNldFNlY3Rpb24oJ2dvbWFnZV9hY3RpdmF0aW9uJykgLT5zZXRHcm91cHMoJGdyb3VwcykgLT5zYXZlKCk7IE1hZ2U6OmdldENvbmZpZygpLT5yZWluaXQoKTsgTWFnZTo6YXBwKCktPnJlaW5pdFN0b3JlcygpOyB9IHB1YmxpYyBmdW5jdGlvbiBnYSgpIHsgcmV0dXJuIFplbmRfSnNvbjo6ZGVjb2RlKGJhc2U2NF9kZWNvZGUoTWFnZTo6aGVscGVyKCdjb3JlJyktPmRlY3J5cHQoTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL3Byb2NhcnQvYXInKSkpKTsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0SXNDYXJ0UGFnZSgpIHsgcmV0dXJuICgoTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFJlcXVlc3RlZFJvdXRlTmFtZSgpID09ICdjaGVja291dCcpICYmIChNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0UmVxdWVzdGVkQ29udHJvbGxlck5hbWUoKSA9PSAnY2FydCcpICYmIChNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0UmVxdWVzdGVkQWN0aW9uTmFtZSgpID09ICdpbmRleCcpKTsgfSBwdWJsaWMgZnVuY3Rpb24gaXNXaGlzaGxpc3RNb3ZlKCkgeyByZXR1cm4gKE1hZ2U6OmFwcCgpLT5nZXRGcm9udENvbnRyb2xsZXIoKS0+Z2V0UmVxdWVzdCgpLT5nZXRQYXJhbSgnZ3BjX3dpc2hsaXN0X2FkZCcpID09IDEpOyB9IHB1YmxpYyBmdW5jdGlvbiBnZXRDaGFuZ2VBdHRyaWJ1dGVDYXJ0KCkgeyByZXR1cm4gKChNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0UmVxdWVzdGVkUm91dGVOYW1lKCkgPT0gJ2dvbWFnZV9wcm9jYXJ0JykgJiYgKE1hZ2U6OmFwcCgpLT5nZXRGcm9udENvbnRyb2xsZXIoKS0+Z2V0UmVxdWVzdCgpLT5nZXRSZXF1ZXN0ZWRDb250cm9sbGVyTmFtZSgpID09ICdwcm9jYXJ0JykgJiYgKE1hZ2U6OmFwcCgpLT5nZXRGcm9udENvbnRyb2xsZXIoKS0+Z2V0UmVxdWVzdCgpLT5nZXRSZXF1ZXN0ZWRBY3Rpb25OYW1lKCkgPT0gJ2NoYW5nZWF0dHJpYnV0ZWNhcnQnKSk7IH0gcHVibGljIGZ1bmN0aW9uIGdldENoYW5nZVF0eUNhcnQoKSB7IHJldHVybiAoKE1hZ2U6OmFwcCgpLT5nZXRGcm9udENvbnRyb2xsZXIoKS0+Z2V0UmVxdWVzdCgpLT5nZXRSZXF1ZXN0ZWRSb3V0ZU5hbWUoKSA9PSAnZ29tYWdlX3Byb2NhcnQnKSAmJiAoTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFJlcXVlc3RlZENvbnRyb2xsZXJOYW1lKCkgPT0gJ3Byb2NhcnQnKSAmJiAoTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFJlcXVlc3RlZEFjdGlvbk5hbWUoKSA9PSAnY2hhbmdlcXR5Y2FydGl0ZW0nKSk7IH0gcHVibGljIGZ1bmN0aW9uIGlzUHJvQ2FydEVuYWJsZSgpIHsgcmV0dXJuIChNYWdlOjpnZXRTdG9yZUNvbmZpZygnZ29tYWdlX3Byb2NhcnQvZ2VuZXJhbC9lbmFibGUnKSAmJiBpbl9hcnJheShNYWdlOjphcHAoKS0+Z2V0U3RvcmUoKS0+Z2V0V2Vic2l0ZUlkKCksICR0aGlzLT5nZXRBdmFpbGF2ZWxXZWJzaXRlcygpKSk7IH0gcHVibGljIGZ1bmN0aW9uIGlzQ3Jvc3NzZWxsQWRkKCkgeyByZXR1cm4gKChNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0UGFyYW0oJ2dwY19jcm9zc3NlbGwnKSA9PSAxKSB8fCAoTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFBhcmFtKCdncGNfYWRkJykgPT0gMSkpOyB9IHB1YmxpYyBmdW5jdGlvbiBpc1Byb2R1Y3RSZXZpZXdQYWdlKCkgeyByZXR1cm4gTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFJlcXVlc3RlZFJvdXRlTmFtZSgpID09ICdyZXZpZXcnOyB9IHB1YmxpYyBmdW5jdGlvbiBpc1Nob3BwaW5nQ2FydERpc2FibGUoKSB7IGlmIChjb3VudChNYWdlOjpnZXRTaW5nbGV0b24oJ2NoZWNrb3V0L3Nlc3Npb24nKS0+Z2V0TWVzc2FnZXMoZmFsc2UpLT5nZXRJdGVtcyhNYWdlX0NvcmVfTW9kZWxfTWVzc2FnZTo6RVJST1IpKSAmJiAkdGhpcy0+aXNQcm9DYXJ0RW5hYmxlKCkpIHsgcmV0dXJuIGZhbHNlOyB9ICRwcm9jYXJ0ID0gKE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfcHJvY2FydC9nZW5lcmFsL2Rpc2FibGVfY2FydCcpICYmICR0aGlzLT5pc1Byb0NhcnRFbmFibGUoKSk7IGlmICgkcHJvY2FydCkgeyByZXR1cm4gdHJ1ZTsgfSAkX21vZHVsZXMgPSBNYWdlOjpnZXRDb25maWcoKS0+Z2V0Tm9kZSgnbW9kdWxlcycpLT5jaGlsZHJlbigpOyAkX21vZHVsZXNBcnJheSA9IChhcnJheSkkX21vZHVsZXM7ICRsaWdodGNoZWNrb3V0ID0gKGlzc2V0KCRfbW9kdWxlc0FycmF5WydHb01hZ2VfQ2hlY2tvdXQnXSkgJiYgJF9tb2R1bGVzQXJyYXlbJ0dvTWFnZV9DaGVja291dCddLT5pcygnYWN0aXZlJykpOyBpZiAoISRsaWdodGNoZWNrb3V0KSB7IHJldHVybiBmYWxzZTsgfSAkbGlnaHRjaGVja291dCA9IChNYWdlOjpoZWxwZXIoJ2dvbWFnZV9jaGVja291dCcpLT5nZXRDb25maWdEYXRhKCdnZW5lcmFsL2Rpc2FibGVfY2FydCcpICYmIE1hZ2U6OmhlbHBlcignZ29tYWdlX2NoZWNrb3V0JyktPmdldENvbmZpZ0RhdGEoJ2dlbmVyYWwvZW5hYmxlZCcpICYmIGluX2FycmF5KE1hZ2U6OmFwcCgpLT5nZXRTdG9yZSgpLT5nZXRXZWJzaXRlSWQoKSwgTWFnZTo6aGVscGVyKCdnb21hZ2VfY2hlY2tvdXQnKS0+Z2V0QXZhaWxhdmVsV2Vic2l0ZXMoKSkpOyByZXR1cm4gJGxpZ2h0Y2hlY2tvdXQ7IH0gcHVibGljIGZ1bmN0aW9uIGdldFByb2NhcnRQcm9kdWN0RGF0YSgkcHJvZHVjdCwgJGNhcnQgPSBmYWxzZSwgJHBhcmVudF9pZCA9IGZhbHNlKSB7IGlmICgkcHJvZHVjdC0+Z2V0U3RvY2tJdGVtKCktPmdldE1hbmFnZVN0b2NrKCkgJiYgISRwcm9kdWN0LT5nZXRTdG9ja0l0ZW0oKS0+Z2V0QmFja29yZGVycygpKSB7ICRtaW5fcXR5ID0gJHByb2R1Y3QtPmdldFN0b2NrSXRlbSgpLT5nZXRNaW5TYWxlUXR5KCk7IGlmICgkcHJvZHVjdC0+Z2V0VHlwZUlkKCkgPT0gTWFnZV9DYXRhbG9nX01vZGVsX1Byb2R1Y3RfVHlwZTo6VFlQRV9TSU1QTEUpIHsgJG1heF9xdHkgPSBtaW4oYXJyYXkoJHByb2R1Y3QtPmdldFN0b2NrSXRlbSgpLT5nZXRNYXhTYWxlUXR5KCksICRwcm9kdWN0LT5nZXRTdG9ja0l0ZW0oKS0+Z2V0UXR5KCkpKTsgfSBlbHNlIHsgJG1heF9xdHkgPSAkcHJvZHVjdC0+Z2V0U3RvY2tJdGVtKCktPmdldE1heFNhbGVRdHkoKTsgfSAkcXVvdGUgPSBNYWdlOjpnZXRTaW5nbGV0b24oJ2NoZWNrb3V0L3Nlc3Npb24nKS0+Z2V0UXVvdGUoKTsgJGl0ZW0gPSAkcXVvdGUtPmdldEl0ZW1CeVByb2R1Y3QoJHByb2R1Y3QpOyBpZiAoJGl0ZW0gJiYgJHF0eSA9ICRpdGVtLT5nZXRRdHkoKSkgeyAkbWF4X3F0eSA9ICRtYXhfcXR5IC0gJHF0eTsgaWYgKCRtaW5fcXR5ID4gJG1heF9xdHkpIHsgJG1pbl9xdHkgPSAkbWF4X3F0eTsgfSB9IH0gZWxzZSB7ICRtaW5fcXR5ID0gJHByb2R1Y3QtPmdldFN0b2NrSXRlbSgpLT5nZXRNaW5TYWxlUXR5KCk7ICRtYXhfcXR5ID0gJHByb2R1Y3QtPmdldFN0b2NrSXRlbSgpLT5nZXRNYXhTYWxlUXR5KCk7IH0gaWYgKCRwYXJlbnRfaWQgfHwgJHByb2R1Y3QtPmdldFR5cGVJZCgpID09IE1hZ2VfQ2F0YWxvZ19Nb2RlbF9Qcm9kdWN0X1R5cGU6OlRZUEVfR1JPVVBFRCkgeyAkbWluX3F0eSA9IDA7IH0gJHByb2R1Y3RfZGF0YSA9IE1hZ2U6OmdldE1vZGVsKCdjYXRhbG9naW52ZW50b3J5L3N0b2NrX2l0ZW0nKS0+bG9hZEJ5UHJvZHVjdCgkcHJvZHVjdCk7ICRxdHlfaW5jcmVtZW50cyA9ICRwcm9kdWN0X2RhdGEtPmdldFF0eUluY3JlbWVudHMoKTsgaWYgKCRxdHlfaW5jcmVtZW50cyAmJiAhJHBhcmVudF9pZCkgeyAkbWluX3F0eSA9ICRxdHlfaW5jcmVtZW50czsgfSBpZiAoJHBhcmVudF9pZCkgeyAkcGFyZW50X3Byb2R1Y3QgPSBNYWdlOjpnZXRNb2RlbCgnY2F0YWxvZy9wcm9kdWN0JyktPmxvYWQoJHBhcmVudF9pZCk7IGlmICgkcGFyZW50X3Byb2R1Y3QtPmdldFR5cGVJZCgpID09IE1hZ2VfQ2F0YWxvZ19Nb2RlbF9Qcm9kdWN0X1R5cGU6OlRZUEVfQ09ORklHVVJBQkxFKSB7ICRwcm9kdWN0X2RhdGEgPSBNYWdlOjpnZXRNb2RlbCgnY2F0YWxvZ2ludmVudG9yeS9zdG9ja19pdGVtJyktPmxvYWRCeVByb2R1Y3QoJHBhcmVudF9wcm9kdWN0KTsgJHF0eV9pbmNyZW1lbnRzID0gJHByb2R1Y3RfZGF0YS0+Z2V0UXR5SW5jcmVtZW50cygpOyAkbWluX3F0eSA9ICRxdHlfaW5jcmVtZW50czsgfSB9ICRibG9ja19wcm9kdWN0X2xpc3QgPSBNYWdlOjpnZXRCbG9ja1NpbmdsZXRvbignY2F0YWxvZy9wcm9kdWN0X2xpc3QnKTsgcmV0dXJuIGFycmF5KCdtaW5fcXR5JyA9PiBpbnR2YWwoJG1pbl9xdHkpLCAnbWF4X3F0eScgPT4gaW50dmFsKCRtYXhfcXR5KSwgJ25hbWUnID0+ICRwcm9kdWN0LT5nZXROYW1lKCksICdpc19zaW1wbGUnID0+ICgkcHJvZHVjdC0+Z2V0VHlwZUlkKCkgPT0gTWFnZV9DYXRhbG9nX01vZGVsX1Byb2R1Y3RfVHlwZTo6VFlQRV9TSU1QTEUgPyAxIDogMCksICdpc19ncm91cGVkJyA9PiAoJHByb2R1Y3QtPmdldFR5cGVJZCgpID09IE1hZ2VfQ2F0YWxvZ19Nb2RlbF9Qcm9kdWN0X1R5cGU6OlRZUEVfR1JPVVBFRCA/IDEgOiAwKSwgJ2lzX2J1bmRsZWQnID0+ICgkcHJvZHVjdC0+Z2V0VHlwZUlkKCkgPT0gTWFnZV9DYXRhbG9nX01vZGVsX1Byb2R1Y3RfVHlwZTo6VFlQRV9CVU5ETEUgPyAxIDogMCksICdpc19naWZ0Y2FyZCcgPT4gKCRwcm9kdWN0LT5nZXRUeXBlSWQoKSA9PSAnZ2lmdGNhcmQnID8gMSA6IDApLCAncGFyZW50X2lkJyA9PiAkcGFyZW50X2lkLCAncHJvZHVjdF91cmwnID0+ICRwcm9kdWN0LT5nZXRQcm9kdWN0VXJsKCksICdhZGR0b2NhcnRfdXJsJyA9PiAkYmxvY2tfcHJvZHVjdF9saXN0LT5nZXRBZGRUb0NhcnRVcmwoJHByb2R1Y3QpLCAnaW5jcmVtZW50cycgPT4gKCRxdHlfaW5jcmVtZW50cyA/ICRxdHlfaW5jcmVtZW50cyA6IDEpICk7IH0gcHVibGljIGZ1bmN0aW9uIGlzQ29uZmlndXJlQ2FydCgpIHsgcmV0dXJuIHN0cnBvcyhNYWdlOjpoZWxwZXIoJ2NvcmUvdXJsJyktPmdldEN1cnJlbnRVcmwoKSwgJ2NvbmZpZ3VyZS9pZCcpID8gMSA6IDA7IH0gcHVibGljIGZ1bmN0aW9uIGdldEJ1bmRsZVByb2R1Y3RTZWxlY3Rpb25zKCRwYXJlbnRQcm9kdWN0KSB7ICR0eXBlSW5zdGFuY2UgPSAkcGFyZW50UHJvZHVjdC0+Z2V0VHlwZUluc3RhbmNlKHRydWUpOyByZXR1cm4gJHR5cGVJbnN0YW5jZS0+Z2V0U2VsZWN0aW9uc0NvbGxlY3Rpb24oICR0eXBlSW5zdGFuY2UtPmdldE9wdGlvbnNJZHMoJHBhcmVudFByb2R1Y3QpLCAkcGFyZW50UHJvZHVjdCApOyB9IHB1YmxpYyBmdW5jdGlvbiBnZXRJc0FueW1vcmVWZXJzaW9uKCRtYWpvciwgJG1pbm9yLCAkcmV2aXNpb24gPSAwKSB7ICR2ZXJzaW9uX2luZm8gPSBNYWdlOjpnZXRWZXJzaW9uKCk7ICR2ZXJzaW9uX2luZm8gPSBleHBsb2RlKCcuJywgJHZlcnNpb25faW5mbyk7IGlmICgkdmVyc2lvbl9pbmZvWzBdID4gJG1ham9yKSB7IHJldHVybiB0cnVlOyB9IGVsc2VpZiAoJHZlcnNpb25faW5mb1swXSA9PSAkbWFqb3IpIHsgaWYgKCR2ZXJzaW9uX2luZm9bMV0gPiAkbWlub3IpIHsgcmV0dXJuIHRydWU7IH0gZWxzZWlmICgkdmVyc2lvbl9pbmZvWzFdID09ICRtaW5vcikgeyBpZiAoJHZlcnNpb25faW5mb1syXSA+PSAkcmV2aXNpb24pIHsgcmV0dXJuIHRydWU7IH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfSB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0gfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9IH0gcHVibGljIGZ1bmN0aW9uIGZvcm1hdENvbG9yKCR2YWx1ZSkgeyBpZiAoJHZhbHVlID0gcHJlZ19yZXBsYWNlKCcvW15hLXpBLVowLTlcc10vJywgJycsICR2YWx1ZSkpIHsgJHZhbHVlID0gJyMnIC4gJHZhbHVlOyB9IHJldHVybiAkdmFsdWU7IH0gcHVibGljIGZ1bmN0aW9uIGlzRW50ZXJwcmlzZSgpIHsgJG1vZHVsZXMgPSBhcnJheV9rZXlzKChhcnJheSlNYWdlOjpnZXRDb25maWcoKS0+Z2V0Tm9kZSgnbW9kdWxlcycpLT5jaGlsZHJlbigpKTsgcmV0dXJuIGluX2FycmF5KCdFbnRlcnByaXNlX0VudGVycHJpc2UnLCAkbW9kdWxlcyk7IH0gcHVibGljIGZ1bmN0aW9uIGdldElzVWx0aW1lbnRvVGhlbWUoKSB7ICRtb2R1bGVzID0gKGFycmF5KU1hZ2U6OmdldENvbmZpZygpLT5nZXROb2RlKCdtb2R1bGVzJyktPmNoaWxkcmVuKCk7IGlmICghaXNzZXQoJG1vZHVsZXNbJ1VsdGltZW50b19UaGVtZSddKSkgeyByZXR1cm4gZmFsc2U7IH0gcmV0dXJuICRtb2R1bGVzWydVbHRpbWVudG9fVGhlbWUnXS0+aXMoJ2FjdGl2ZScpOyB9IHB1YmxpYyBmdW5jdGlvbiBub3RpZnkoKSB7ICRmcmVxdWVuY3kgPSBpbnR2YWwoTWFnZTo6YXBwKCktPmxvYWRDYWNoZSgnZ29tYWdlX25vdGlmaWNhdGlvbnNfZnJlcXVlbmN5JykpOyBpZiAoISRmcmVxdWVuY3kpIHsgJGZyZXF1ZW5jeSA9IDI0OyB9ICRsYXN0X3VwZGF0ZSA9IGludHZhbChNYWdlOjphcHAoKS0+bG9hZENhY2hlKCdnb21hZ2Vfbm90aWZpY2F0aW9uc19sYXN0X3VwZGF0ZScpKTsgaWYgKCgkZnJlcXVlbmN5ICogNjAgKiA2MCArICRsYXN0X3VwZGF0ZSkgPiB0aW1lKCkpIHsgcmV0dXJuIGZhbHNlOyB9ICR0aW1lc3RhbXAgPSAkbGFzdF91cGRhdGU7IGlmICghJHRpbWVzdGFtcCkgeyAkdGltZXN0YW1wID0gdGltZSgpOyB9IHRyeSB7ICRjaCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCBzcHJpbnRmKCdodHRwczovL3d3dy5nb21hZ2UuY29tL2luZGV4LnBocC9nb21hZ2Vfbm90aWZpY2F0aW9uL2luZGV4L2RhdGEnKSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NULCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsICdza3U9cHJvY2FydCZ0aW1lc3RhbXA9JyAuICR0aW1lc3RhbXAgLiAnJnZlcj0nIC4gdXJsZW5jb2RlKCcyLjEnKSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9USU1FT1VULCAzMCk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgMCk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZSE9TVCwgMCk7ICRjb250ZW50ID0gY3VybF9leGVjKCRjaCk7ICRyZXN1bHQgPSBaZW5kX0pzb246OmRlY29kZSgkY29udGVudCk7IGlmICgkcmVzdWx0ICYmIGlzc2V0KCRyZXN1bHRbJ2ZyZXF1ZW5jeSddKSAmJiAoJHJlc3VsdFsnZnJlcXVlbmN5J10gIT0gJGZyZXF1ZW5jeSkpIHsgTWFnZTo6YXBwKCktPnNhdmVDYWNoZSgkcmVzdWx0WydmcmVxdWVuY3knXSwgJ2dvbWFnZV9ub3RpZmljYXRpb25zX2ZyZXF1ZW5jeScpOyB9IGlmICgkcmVzdWx0ICYmIGlzc2V0KCRyZXN1bHRbJ2RhdGEnXSkpIHsgaWYgKCFlbXB0eSgkcmVzdWx0WydkYXRhJ10pKSB7IE1hZ2U6OmdldE1vZGVsKCdhZG1pbm5vdGlmaWNhdGlvbi9pbmJveCcpLT5wYXJzZSgkcmVzdWx0WydkYXRhJ10pOyB9IH0gfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7IH0gTWFnZTo6YXBwKCktPnNhdmVDYWNoZSh0aW1lKCksICdnb21hZ2Vfbm90aWZpY2F0aW9uc19sYXN0X3VwZGF0ZScpOyB9IH0="));